inputs:
  install_dir:
    type: string
    default: /opt/music

dsl_definitions:
  - &fabric_env
    host_string: { get_attribute: [ elastic_ip, aws_resource_id ]}
    user: { get_property: [ server, agent_config, user ] }
    key_filename: { get_input: private_key_path }
    forward_agent: no

node_types:
  types.music:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      install_dir:
        type: string
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/music/install.sh
            fabric_env:
              default: *fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/music/start.sh
            fabric_env:
              default: *fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/music/stop.sh
            fabric_env:
              default: *fabric_env
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/music/delete.sh
            fabric_env:
              default: *fabric_env

node_templates:
  os_config:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/initialize.sh
            fabric_env: *fabric_env
    relationships:
      - target: server
        type: cloudify.relationships.contained_in

  nginx:
    type: cloudify.nodes.WebServer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/nginx/install.sh
            fabric_env: *fabric_env

    relationships:
      - target: server
        type: cloudify.relationships.contained_in
      - target: os_config
        type: cloudify.relationships.depends_on
      - target: music
        type: cloudify.relationships.connected_to
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            postconfigure:
              implementation: fabric.fabric_plugin.tasks.run_script
              inputs:
                script_path: scripts/nginx/add-upstream-def.sh
                fabric_env: *fabric_env

  music:
    type: types.music
    properties:
      install_dir: { get_input: install_dir }
    relationships:
      - target: server
        type: cloudify.relationships.contained_in
      - target: os_config
        type: cloudify.relationships.depends_on
